[{"content":"Intro  Hugo is one of the most popular open-source static site generators. Github Pages is a static site hosting service that takes HTML, CSS, and JavaScript files straight from a repository on GitHub, optionally runs the files through a build process, and publishes a website.   Create a Github repository  Go on the page new repository on Github. Enter the name of the repository. Select public and add a README file. Click on Create Repository. Copy the repository url.  Terminal  Open the console. Change directory. cd  Clone the repository git clone \u0026lt;repository-url\u0026gt; Cloning into 'repository-name'... remote: Enumerating objects: 3, done. remote: Counting objects: 100% (3/3), done. remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0 Receiving objects: 100% (3/3), done.  Open the folder that has just been created in the console cd \u0026lt;repository-name\u0026gt;  Go a new branch with the name setup-hugo for exemple. git checkout -b setup-hugo Switched to a new branch 'setup-hugo'  Create an Hugo Website with yaml files hugo new site . --force -f yaml Congratulations! Your new Hugo site is created in ..... Just a few more steps and you're ready to go: 1. Download a theme into the same-named folder. Choose a theme from https://themes.gohugo.io/ or create your own with the \u0026quot;hugo new theme \u0026lt;THEMENAME\u0026gt;\u0026quot; command. 2. Perhaps you want to add some content. You can add single files with \u0026quot;hugo new \u0026lt;SECTIONNAME\u0026gt;/\u0026lt;FILENAME\u0026gt;.\u0026lt;FORMAT\u0026gt;\u0026quot;. 3. Start the built-in live server via \u0026quot;hugo server\u0026quot;. Visit https://gohugo.io/ for quickstart guide and full documentation.  Add a theme in this tutoriel it\u0026rsquo;s PaperMod git submodule add https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod --depth=1 Cloning into 'PaperMod/kangapi-docs-video/themes/PaperMod'... remote: Enumerating objects: 27650, done. remote: Counting objects: 100% (203/203), done. remote: Compressing objects: 100% (119/119), done. remote: Total 27650 (delta 94), reused 152 (delta 62), pack-reused 27447 Receiving objects: 100% (27650/27650), 13.80 MiB | 17.23 MiB/s, done. Resolving deltas: 100% (14557/14557), done. Needed when you reclone your repo (submodules may not get cloned automatically) git submodule update --init --recursive  Change config.yaml replace all to config to this code  Don\u0026rsquo;t forget to change the first line which is essential for proper functioning on Github Pages  baseURL: \u0026quot;https://\u0026lt;github-username\u0026gt;.github.io/\u0026lt;repository-name\u0026gt;\u0026quot; title: ExampleSite paginate: 5 theme: PaperMod enableRobotsTXT: true buildDrafts: false buildFuture: false buildExpired: false googleAnalytics: UA-123-45 minify: disableXML: true minifyOutput: true params: env: production # to enable google analytics, opengraph, twitter-cards and schema. title: ExampleSite description: \u0026quot;ExampleSite description\u0026quot; keywords: [Blog, Portfolio, PaperMod] author: Me # author: [\u0026quot;Me\u0026quot;, \u0026quot;You\u0026quot;] # multiple authors images: [\u0026quot;\u0026lt;link or path of image for opengraph, twitter-cards\u0026gt;\u0026quot;] DateFormat: \u0026quot;January 2, 2006\u0026quot; defaultTheme: auto # dark, light disableThemeToggle: false ShowReadingTime: true ShowShareButtons: true ShowPostNavLinks: true ShowBreadCrumbs: true ShowCodeCopyButtons: false disableSpecial1stPost: false disableScrollToTop: false comments: false hidemeta: false hideSummary: false showtoc: false tocopen: false assets: # disableHLJS: true # to disable highlight.js # disableFingerprinting: true favicon: \u0026quot;\u0026lt;link / abs url\u0026gt;\u0026quot; favicon16x16: \u0026quot;\u0026lt;link / abs url\u0026gt;\u0026quot; favicon32x32: \u0026quot;\u0026lt;link / abs url\u0026gt;\u0026quot; apple_touch_icon: \u0026quot;\u0026lt;link / abs url\u0026gt;\u0026quot; safari_pinned_tab: \u0026quot;\u0026lt;link / abs url\u0026gt;\u0026quot; label: text: \u0026quot;Home\u0026quot; #icon: /apple-touch-icon.png #iconHeight: 35 # profile-mode profileMode: enabled: false # needs to be explicitly set title: ExampleSite subtitle: \u0026quot;This is subtitle\u0026quot; imageUrl: \u0026quot;\u0026lt;img location\u0026gt;\u0026quot; imageWidth: 120 imageHeight: 120 imageTitle: my image buttons: - name: Posts url: posts - name: Tags url: tags # home-info mode homeInfoParams: Title: \u0026quot;Hi there \\U0001F44B\u0026quot; Content: Welcome to my blog socialIcons: - name: twitter url: \u0026quot;https://twitter.com/\u0026quot; - name: stackoverflow url: \u0026quot;https://stackoverflow.com\u0026quot; - name: github url: \u0026quot;https://github.com/\u0026quot; analytics: google: SiteVerificationTag: \u0026quot;XYZabc\u0026quot; bing: SiteVerificationTag: \u0026quot;XYZabc\u0026quot; yandex: SiteVerificationTag: \u0026quot;XYZabc\u0026quot; cover: hidden: true # hide everywhere but not in structured data hiddenInList: true # hide on list pages and home hiddenInSingle: true # hide on single page editPost: URL: \u0026quot;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026quot; Text: \u0026quot;Suggest Changes\u0026quot; # edit text appendFilePath: true # to append file path to Edit link # for search # https://fusejs.io/api/options.html fuseOpts: isCaseSensitive: false shouldSort: true location: 0 distance: 1000 threshold: 0.4 minMatchCharLength: 0 keys: [\u0026quot;title\u0026quot;, \u0026quot;permalink\u0026quot;, \u0026quot;summary\u0026quot;, \u0026quot;content\u0026quot;] menu: main: - identifier: categories name: categories url: /categories/ weight: 10 - identifier: tags name: tags url: /tags/ weight: 20 - identifier: example name: example.org url: https://example.org weight: 30 # Read: https://github.com/adityatelange/hugo-PaperMod/wiki/FAQs#using-hugos-syntax-highlighter-chroma # pygmentsUseClasses: true # markup: # highlight: # # anchorLineNos: true # codeFences: true # guessSyntax: true # lineNos: true # style: monokai  Check your site builds by running the below command in your terminal, and then visiting http://localhost:1313/\u0026lt;repository-name\u0026gt;/.  Push to Github   Add all files\ngit add .   Commit the current state of our files with a commit description\ngit commit -m \u0026quot;Commit descpription\u0026quot; [setup-hugo 6da6dff] Commit description 5 files changed, 144 insertions(+) create mode 100644 .gitmodules create mode 100644 .hugo_build.lock create mode 100644 archetypes/default.md create mode 100644 config.yaml create mode 160000 themes/PaperMod   Now push our local commit up to the Github server with git push\ngit push origin setup-hugo Enumerating objects: 9, done. Counting objects: 100% (9/9), done. Delta compression using up to 8 threads Compressing objects: 100% (5/5), done. Writing objects: 100% (8/8), 2.11 KiB | 2.11 MiB/s, done. Total 8 (delta 0), reused 0 (delta 0), pack-reused 0 remote: remote: Create a pull request for 'setup-hugo' on GitHub by visiting: remote: https://github.com/\u0026lt;github-username\u0026gt;/\u0026lt;github-repository-name\u0026gt;/pull/new/setup-hugo remote: To https://github.com/\u0026lt;github-username\u0026gt;/\u0026lt;github-repository-name\u0026gt;.git * [new branch] setup-hugo -\u0026gt; setup-hugo   If we head back onto Github to our repo\u0026rsquo;s page, we should now see a banner informing us that a branch has been updated and providing us with an option to Compare \u0026amp;pull request. Click that big green button !\n Click on the green button that has just appeared  Click on the new button  check if your commit was successfully merged. If so, there should be a purple merged button     In your terminal, run the following:\ngit checkout main # Switch back to the main branch Switched to branch 'main' Your branch is up to date with 'origin/main'. git pull # Pull the changes to the main branch down from Github remote: Enumerating objects: 1, done. remote: Counting objects: 100% (1/1), done. remote: Total 1 (delta 0), reused 0 (delta 0), pack-reused 0 Unpacking objects: 100% (1/1), 623 bytes | 623.00 KiB/s, done. From https://github.com/\u0026lt;github-username\u0026gt;/\u0026lt;github-repository-name\u0026gt; 8de614a..c986a64 main -\u0026gt; origin/main Updating 8de614a..c986a64 Fast-forward .gitmodules | 3 ++ .hugo_build.lock | 0 archetypes/default.md | 6 +++ config.yaml | 134 ++++++++++++++++++++++++++++++++++++++++++++++++++ themes/PaperMod | 1 + 5 files changed, 144 insertions(+) create mode 100644 .gitmodules create mode 100644 .hugo_build.lock create mode 100644 archetypes/default.md create mode 100644 config.yaml create mode 160000 themes/PaperMod   Continous Deployment In this section we will create a workflow that will archieve this for us. It will run on Github Actions   Let\u0026rsquo;s start by cheking out a new branch in our local repo\ngit checkout -b add-cd Switched to a new branch 'add-cd'   Github Actions are automatically triggered by files that are stored in a special folder called .github/workflows. So lets create that folder !\nmkdir -p .github/workflows   Create a cd.yml(cd is short for Continous Deployment) file inside the .github/workflows.\ntouch .github/workflows/cd.yml   Open the cd.yml in favorite text editor.\n  Copy and paste into your file.\nname: Build and Deploy Site on: push: branches: - main # Set a branch to deploy pull_request: branches: - main jobs: build-and-deploy-site: runs-on: ubuntu-latest steps: - name: Checkout repo uses: actions/checkout@v2 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: 'latest' extended: true - name: Build site with Hugo run: hugo --minify - name: Check HTML uses: chabad360/htmlproofer@master with: directory: \u0026quot;.public\u0026quot; arguments: --only-4xx --check-favicon --check-html --assume-extension --empty-alt-ignore --disable-external continue-on-error: true - name: Deploy to Github Pages if: github.event_name == 'push' \u0026amp;\u0026amp; github.ref == 'refs/heads/main' uses: peaceiris/actions-gh-pages@v3 with: github_token: ${{ secrets.GITHUB_TOKEN }} publish_dir: ./public   Add commit and push the cd.yml file to github we did before.\ngit add .github/workflows/cd.yml git commit -m \u0026quot;Commit-description\u0026quot; git push origin add-cd   Create a new pull request like the step 4 in push-to-github.  Click on the green button that has just appeared  Click on the new button  check if your commit was successfully merged. If so, there should be a purple merged button    Go in the actions menu. Click on Build and Deploy Site.  You should see a yellow circle.  After less than a minute, you should see the circle in green.  Go in your repository settings in Branches Click on Add rule  Enter a branch pattern name Click on Require status checks to pass before merging Search build-and-deploy-site in the list. Click on Create !  Now go in Pages Select the gh-pages branch Click on Save  You should see an amazing website !!!!!     You can finish with\ngit checkout main git pull   Exemple Page\n--- title: \u0026quot;My 1st post\u0026quot; date: 2020-09-15T11:30:03+00:00 # weight: 1 # aliases: [\u0026quot;/first\u0026quot;] tags: [\u0026quot;first\u0026quot;] author: \u0026quot;Me\u0026quot; # author: [\u0026quot;Me\u0026quot;, \u0026quot;You\u0026quot;] # multiple authors showToc: true TocOpen: false draft: false hidemeta: false comments: false description: \u0026quot;Desc Text.\u0026quot; canonicalURL: \u0026quot;https://canonical.url/to/page\u0026quot; disableHLJS: true # to disable highlightjs disableShare: false disableHLJS: false hideSummary: false searchHidden: true ShowReadingTime: true ShowBreadCrumbs: true ShowPostNavLinks: true cover: image: \u0026quot;\u0026lt;image path/url\u0026gt;\u0026quot; # image path/url alt: \u0026quot;\u0026lt;alt text\u0026gt;\u0026quot; # alt text caption: \u0026quot;\u0026lt;text\u0026gt;\u0026quot; # display caption under cover relative: false # when using page bundles set this to true hidden: true # only hide on current single page editPost: URL: \u0026quot;https://github.com/\u0026lt;path_to_repo\u0026gt;/content\u0026quot; Text: \u0026quot;Suggest Changes\u0026quot; # edit text appendFilePath: true # to append file path to Edit link ---   ","permalink":"https://kangapi.github.io/docs-V4/posts/hugo-and-github-pages/","summary":"Intro  Hugo is one of the most popular open-source static site generators. Github Pages is a static site hosting service that takes HTML, CSS, and JavaScript files straight from a repository on GitHub, optionally runs the files through a build process, and publishes a website.   Create a Github repository  Go on the page new repository on Github. Enter the name of the repository. Select public and add a README file.","title":"Hugo and Github Pages"},{"content":"Requirement  IntelliJ IDEA, The Community edition is sufficient The plugin Minecraft Developement for IntelliJ IDEA  Create a new project  Click on new project  Select Minecraft and Spigot Plugin  Enter me.kangapi in the field GroupId and a PluginName in ArtifactId and click Next  You can change the Minecraft Version and set a Description  Enter the same Plugin Name as in step 4 and click Finish   Run a Project Click on the green play button Create events  Add implements Listener  Random Command  To display messages in the console, just write sout and press Enter this will be automatically replaced by System.out.println();   ","permalink":"https://kangapi.github.io/docs-V4/posts/minecraft-plugin-memo/","summary":"Requirement  IntelliJ IDEA, The Community edition is sufficient The plugin Minecraft Developement for IntelliJ IDEA  Create a new project  Click on new project  Select Minecraft and Spigot Plugin  Enter me.kangapi in the field GroupId and a PluginName in ArtifactId and click Next  You can change the Minecraft Version and set a Description  Enter the same Plugin Name as in step 4 and click Finish   Run a Project Click on the green play button Create events  Add implements Listener  Random Command  To display messages in the console, just write sout and press Enter this will be automatically replaced by System.","title":"Memo plugin minecraft"}]